{
  "summary": [
    {
      "summary": "Stratum V2 is the next generation protocol for pooled mining, which aims to increase security, efficiency, and decentralization in the Bitcoin network. It introduces three new sub-protocols, allowing miners to select transaction sets and improving censorship resistance. By incorporating encryption and NOISE protocol authentication, it strengthens the protocol against man-in-the-middle attacks. The new Stratum optimizes data transfer, resulting in higher submission rates and reduced hash rate variance. Additionally, it allows for incremental improvements and cross-compatibility between mining pools and devices. The authors of Stratum V2 are Pavel Moravec and Jan ÄŒapek, in collaboration with industry experts. The open-source bitcoin community encourages support for this protocol to become the new standard.",
      "summaryeli15": "Stratum V2 is a new way for miners to work together to mine Bitcoin. It makes mining more secure and efficient, and reduces the need for lots of expensive equipment. With Stratum V2, miners can choose which transactions to include in a block, which makes it harder for someone to control the network. It also has new protections against attacks, and makes it easier for different mining systems to work together. Overall, it makes Bitcoin mining better and more decentralized.",
      "title": "Stratum V2 Website",
      "link": "https://stratumprotocol.org/"
    },
    {
      "summary": "The meeting notes discuss the StratumV2 Protocol Suite, which includes four protocols for communication standards among five roles in Bitcoin mining entities. The roles include Job Negotiators, Template Providers, Mining Devices, Proxies, and Pool Services. The main protocol is the successor to StratumV1 and is used for mining. It defines different types of communication channels, including standard, extended, and group channels. The Template Distribution Protocol is used to get information about the next block from Bitcoin Core. The full technical specifications can be found on Github.",
      "summaryeli15": "The StratumV2 Protocol Suite is a set of rules for how different parts of Bitcoin mining communicate with each other. There are 5 roles for entities involved in mining, like job negotiators and template providers. The suite includes 4 protocols, which define how these roles interact. The main protocol is the most important, and it allows mining devices, proxies, and pool services to communicate. There are also protocols for getting information about the next block and negotiating job templates.",
      "title": "Stratum V2 Overview",
      "link": "https://stratumprotocol.org/docs/"
    },
    {
      "summary": "The meeting discussed the deficiencies of Stratum protocol v1, which is slow, heavy, and less secure due to its lack of cryptographic authentication. The new protocol aims to reduce data transfers between miners, proxies, and pool operators to enhance efficiency. It also includes security improvements against man-in-the-middle attacks and allows downstream nodes to choose and communicate mining jobs without centralization.",
      "summaryeli15": "The current protocol for cryptocurrency mining is slow, heavy, and not very secure. This new protocol aims to fix these problems by reducing the amount of data miners need to transfer, making it harder for hackers to attack, and allowing different parts of the mining process to communicate better. Overall, this will make mining faster and more fair without making one group have too much power.",
      "title": "Motivation",
      "link": "https://stratumprotocol.org/specification/01-Motivation/"
    },
    {
      "summary": "The high-level design goals for Stratum v2 are to develop a precisely defined binary protocol, make it similar to v1 to aid in understanding, remove issues from v1, allow different mining jobs on the same connection, avoid additional risks for operators and miners, support version rolling and header-only mining, reduce network traffic and computational intensity, put complexity on the pool side rather than the miner side, allow for translation to and from the original protocol, reduce stale ratios, support nTime rolling in a safe way, provide support for vendor-specific extensions and optional telemetry data, and allow for connection aggregation to upstream nodes.",
      "summaryeli15": "The Stratum v2 protocol is being updated to fix issues and make it easier to use. The new version is similar to the old version so people who are already familiar with it can understand it better. One goal is to reduce problems for pool operators and miners. Another goal is to make mining faster and use less network traffic. The update also allows for different mining jobs on the same connection and supports additional features like version rolling and header-only mining.",
      "title": "Design Goals",
      "link": "https://stratumprotocol.org/specification/02-Design-Goals/"
    },
    {
      "summary": "This document outlines four distinct protocols needed to fully utilize the proposed features. The Mining Protocol is used for mining and replaces Stratum v1. The Template Distribution Protocol replaces getblocktemplate and provides information about the next block. The Job Distribution Protocol passes new work to nodes. There are five possible roles for software/hardware, including Mining Device, Pool Service, Mining Proxy, Job Declarator, and Template Provider. Each sub-protocol is based on the same technical principles and requires a connection-oriented transport layer. The protocol uses binary messages with fixed framing and includes error codes for interoperability.",
      "summaryeli15": "There are four important ways for different devices and software to communicate with each other when mining Bitcoin. Each method has its own rules and protocols. There are also five different roles that these devices and software can play, depending on what they are designed to do. The protocols use a specific way of sending messages to each other, and there are specific rules for how errors are handled.",
      "title": "Protocol Overview",
      "link": "https://stratumprotocol.org/specification/03-Protocol-Overview/"
    },
    {
      "summary": "The meeting notes discuss the optional use of a handshake protocol based on the Noise Protocol framework for establishing secure communication. While its use is optional for communication on the local network, it is mandatory for remote access to certain nodes. The key goal is to prevent the transmission of information that could be used to estimate a miner's performance or earnings, as this would compromise privacy. The chosen Noise Protocol Framework requires certain cryptographic primitives, and the authenticated key exchange process involves multiple steps. After the handshake process is completed, subsequent traffic is encrypted and decrypted using specific methods. Additionally, the notes mention the need for downstream nodes to configure the Pool Authority Public Key for the pool they want to connect to, which is provided by the pool and can be published on its website or embedded in the mining URL. The structure of encrypted stratum message payloads is also described, indicating how they are divided into ciphertext blocks. The notes conclude with an example of a prefixed base58-check encoded public key.",
      "summaryeli15": "This explanation is about how to establish secure communication in a mining protocol. It uses a handshake protocol based on the Noise Protocol framework. This is done to prevent any information about miners from being leaked. The encryption and decryption processes use specific functions and keys. The handshake process involves multiple steps, and if any step fails, the session is terminated. After the handshake, all subsequent traffic is encrypted. The maximum length for encrypted messages is 65535 bytes. The authority public key is used for security and can be embedded in the mining URL.",
      "title": "Protocol Security",
      "link": "https://stratumprotocol.org/specification/04-Protocol-Security/"
    },
    {
      "summary": "The meeting notes discuss the protocol for communication between downstream devices or proxies and upstream stratum nodes. The protocol allows for the opening of multiple channels within a connection, with each channel representing a dedicated mining session. There are three types of channels: standard channels, extended channels, and group channels. Standard channels operate solely on provided Merkle roots, while extended channels have more control over the search space. The protocol specifies various messages for channel management, job distribution, and submitting work results. There is also a mechanism for grouping standard channels for efficient job distribution. The protocol supports both standard and extended channels, with the latter being optional for clients. The size of the search space for each channel depends on certain header fields and can be dynamically allocated by the server. The notes provide details about the different messages and their purposes within the protocol.",
      "summaryeli15": "The protocol is a set of rules for devices that mine cryptocurrency to communicate with each other. It allows devices to connect to servers or other devices for mining. Each connection has separate channels, which are like different communication lines. There are standard channels for regular mining and extended channels for more advanced options. Channels can be grouped together for efficient communication. The protocol also includes messages for exchanging information and managing the mining process.",
      "title": "Mining Protocol",
      "link": "https://stratumprotocol.org/specification/05-Mining-Protocol/"
    },
    {
      "summary": "In the meeting, the protocol between the Job Declarator and Pool was discussed, which can be used as a trusted third-party service for mining farms. No specific flags were defined for SetupConnection.Success, but identifiers for future mining jobs can be obtained at a slow rate. The server is not allowed to change the coinbase_output_max_additional_size value unless necessary for pool configuration changes. The Job Declarator can propose a set of chosen transactions to the pool, and the server will respond with DeclaredMiningJob if there is a collision or inability to reconstruct the transaction hashes. The client can then respond with the full set of transaction data hashes in IdentifyTransactions, and the server can request missing transactions in ProvideMissingTransactions.",
      "summaryeli15": "This is a communication between a person who declares a job and a group of people who work together to find something valuable. They use a special system to talk to each other and share information. They have rules and messages that they send to each other. They try to make sure everything is secure and that they all understand each other.",
      "title": "Job Declaration Protocol",
      "link": "https://stratumprotocol.org/specification/06-Job-Declaration-Protocol/"
    },
    {
      "summary": "Template Providers are responsible for broadcasting blocks mined using their provided work and tracking the work they provided. The pool is responsible for adding coinbase transaction outputs for payouts, so the Template Provider needs to consider this when selecting transactions for inclusion in a block. The server must provide a SetNewPrevHash message upon successful validation of a new best block, and if a NewMiningJob message has previously been sent with valid work, the client should begin mining on that template. The client also needs to track previous works, and the Job Declarator can request transaction data for a block. The format of the opaque data in RequestTransactionData.Success messages can be changed at the time of a fork, with signaling of support for the new fork. When a coinbase transaction/nonce pair is found that hashes below the target, the client must immediately send a message and the server will construct and propagate the full block.",
      "summaryeli15": "Template Providers are responsible for sending blocks that they helped create, and they need to keep track of the work they provided. When adding transaction data to a block, the Template Provider needs to reserve space for the pool's use. After validating a new block, the server sends a message to start mining on that block. The client can request transaction data for a block, and the format of the data can change with a fork if there is enough time and support. When a client finds a valid coinbase transaction, they send a message to build the full block and send it out.",
      "title": "Template Distribution Protocol",
      "link": "https://stratumprotocol.org/specification/07-Template-Distribution-Protocol/"
    },
    {
      "summary": "During the meeting, it was discussed that the SRI stack is flexible and allows for different configurations. The easiest way to test these configurations is to use the SRI role implementations. The meeting notes provide instructions for running different configurations, including setting up a pool, a translation proxy, and a SV1 miner. The notes also include example configuration files and commands for running the different components. It is important to note that if the share meets the downstream target, the configuration has been run successfully. Additionally, there is a warning to ensure that the difficulty parameters are adjusted accordingly and to set the minimum individual miner hashrate in the config file to avoid errors.",
      "summaryeli15": "The SRI stack is a flexible system that allows different configurations for mining devices. You can test these configurations using the SRI role implementations. One example configuration is a setup where mining devices running SV1 firmware can connect to an SV2 Pool through a Translation Proxy. Another configuration involves a Translator Proxy that acts as a Job Negotiator, allowing miners to select transactions locally and send them to the Pool-side Job Negotiator. To run these configurations, you need to follow specific steps and use custom configuration files.",
      "title": "Getting Started with running SRI - Stratum v2 reference implementation",
      "link": "https://stratumprotocol.org/getting-started/"
    }
  ]
}